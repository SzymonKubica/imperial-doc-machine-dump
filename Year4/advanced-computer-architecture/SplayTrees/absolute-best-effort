sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 2
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 31.6546
Branch Predictor Power Consumption: 2.11589  (7.14%)
 branch target buffer power (W): 1.8151
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0162772
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.176835  (0.596%)
 Instruction Decode Power (W): 0.00799577
 RAT decode_power (W): 0.0567572
 RAT wordline_power (W): 0.0144561
 RAT bitline_power (W): 0.0958077
 DCL Comparators (W): 0.00181792
Instruction Window Power Consumption: 0.849701  (2.87%)
 tagdrive (W): 0.0428745
 tagmatch (W): 0.0160167
 Selection Logic (W): 0.00671084
 decode_power (W): 0.0266252
 wordline_power (W): 0.0272771
 bitline_power (W): 0.730197
Load/Store Queue Power Consumption: 0.96318  (3.25%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 1.30831  (4.41%)
 decode_power (W): 0.0567572
 wordline_power (W): 0.0272771
 bitline_power (W): 1.22428
Result Bus Power Consumption: 0.593218  (2%)
Total Clock Power: 13.9588  (47.1%)
Int ALU Power: 2.33007  (7.86%)
FP ALU Power: 3.57026  (12%)
Instruction Cache Power Consumption: 0.713925  (2.41%)
 decode_power (W): 0.162764
 wordline_power (W): 0.028656
 bitline_power (W): 0.339044
 senseamp_power (W): 0.096
 tagarray_power (W): 0.087461
Itlb_power (W): 0.271872 (0.917%)
Data Cache Power Consumption: 1.85812  (6.27%)
 decode_power (W): 0.651055
 wordline_power (W): 0.0725821
 bitline_power (W): 0.678088
 senseamp_power (W): 0.192
 tagarray_power (W): 0.264398
Dtlb_power (W): 0.543744 (1.83%)
Level 2 Cache Power Consumption: 0.40072 (1.35%)
 decode_power (W): 0.0406909
 wordline_power (W): 0.012296
 bitline_power (W): 0.169522
 senseamp_power (W): 0.048
 tagarray_power (W): 0.130211
sim: command line: /homes/phjk/simplesim-wattch/sim-outorder -ruu:size 16 -lsq:size 8 -res:fpalu 1 -res:fpmult 1 -decode:width 2 -issue:width 2 -commit:width 8 -res:ialu 2 -cache:il1 il1:64:64:1:f -cache:dl1 dl1:128:32:1:l -cache:dl2 ul2:128:64:2:l -bpred comb -bpred:comb 128 -bpred:ras 8 -bpred:btb 256 2 -tlb:itlb itlb:16:4096:1:l -tlb:dtlb dtlb:16:4096:1:l -cache:il2 dl2 ./splaytest.ss 3 100000 100000 100000 3 

sim: simulation started @ Wed Nov  8 14:39:03 2023, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                   comb # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      128 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       256 2 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               2 # instruction decode B/W (insts/cycle)
-issue:width                2 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               8 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:1:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:128:64:2:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:64:64:1:f # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:1:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:16:4096:1:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   2 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  1 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **
Performing 100000 insertions with keys generated by random walk
Insertions: 17005774 microseconds
Performing 100000 queries
Queries: 13459214 microseconds, 134.592140 microseconds/query
number_of_matches = 100000

sim: ** simulation statistics **
sim_num_insn               37730768 # total number of instructions committed
sim_num_refs               15997981 # total number of loads and stores committed
sim_num_loads               9816939 # total number of loads committed
sim_num_stores         6181042.0000 # total number of stores committed
sim_num_branches            8589834 # total number of branches committed
sim_elapsed_time                 30 # total simulation time in seconds
sim_inst_rate          1257692.2667 # simulation speed (in insts/sec)
sim_total_insn             40920814 # total number of instructions executed
sim_total_refs             17120134 # total number of loads and stores executed
sim_total_loads            10310715 # total number of loads executed
sim_total_stores       6809419.0000 # total number of stores executed
sim_total_branches          9295334 # total number of branches executed
sim_cycle                  38430429 # total simulation time in cycles
sim_IPC                      0.9818 # instructions per cycle
sim_CPI                      1.0185 # cycles per instruction
sim_exec_BW                  1.0648 # total instructions (mis-spec + committed) per cycle
sim_IPB                      4.3925 # instruction per branch
IFQ_count                  98046154 # cumulative IFQ occupancy
IFQ_fcount                 16690422 # cumulative IFQ full count
ifq_occupancy                2.5513 # avg IFQ occupancy (insn's)
ifq_rate                     1.0648 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  2.3960 # avg IFQ occupant latency (cycle's)
ifq_full                     0.4343 # fraction of time (cycle's) IFQ was full
RUU_count                 422601206 # cumulative RUU occupancy
RUU_fcount                 10563552 # cumulative RUU full count
ruu_occupancy               10.9965 # avg RUU occupancy (insn's)
ruu_rate                     1.0648 # avg RUU dispatch rate (insn/cycle)
ruu_latency                 10.3273 # avg RUU occupant latency (cycle's)
ruu_full                     0.2749 # fraction of time (cycle's) RUU was full
LSQ_count                 139192412 # cumulative LSQ occupancy
LSQ_fcount                  4580058 # cumulative LSQ full count
lsq_occupancy                3.6219 # avg LSQ occupancy (insn's)
lsq_rate                     1.0648 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  3.4015 # avg LSQ occupant latency (cycle's)
lsq_full                     0.1192 # fraction of time (cycle's) LSQ was full
sim_slip                  597898097 # total number of slip cycles
avg_sim_slip                15.8464 # the average slip between issue and retirement
bpred_comb.lookups          9423349 # total number of bpred lookups
bpred_comb.updates          8589834 # total number of updates
bpred_comb.addr_hits        8219855 # total number of address-predicted hits
bpred_comb.dir_hits         8220331 # total number of direction-predicted hits (includes addr-hits)
bpred_comb.used_bimod       4159488 # total number of bimodal predictions used
bpred_comb.used_2lev        1415530 # total number of 2-level predictions used
bpred_comb.misses            369503 # total number of misses
bpred_comb.jr_hits           968465 # total number of address-predicted hits for JR's
bpred_comb.jr_seen           968573 # total number of JR's seen
bpred_comb.jr_non_ras_hits.PP            1 # total number of address-predicted hits for non-RAS JR's
bpred_comb.jr_non_ras_seen.PP            9 # total number of non-RAS JR's seen
bpred_comb.bpred_addr_rate    0.9569 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_comb.bpred_dir_rate    0.9570 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_comb.bpred_jr_rate    0.9999 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_comb.bpred_jr_non_ras_rate.PP    0.1111 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_comb.retstack_pushes      1178698 # total number of address pushed onto ret-addr stack
bpred_comb.retstack_pops       993380 # total number of address popped off of ret-addr stack
bpred_comb.used_ras.PP       968564 # total number of RAS predictions used
bpred_comb.ras_hits.PP       968464 # total number of RAS hits
bpred_comb.ras_rate.PP    0.9999 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses               43065613 # total number of accesses
il1.hits                   41988988 # total number of hits
il1.misses                  1076625 # total number of misses
il1.replacements            1076561 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0250 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0250 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               16048169 # total number of accesses
dl1.hits                   15979166 # total number of hits
dl1.misses                    69003 # total number of misses
dl1.replacements              68875 # total number of replacements
dl1.writebacks                45284 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0043 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0043 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0028 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                1190912 # total number of accesses
ul2.hits                    1188380 # total number of hits
ul2.misses                     2532 # total number of misses
ul2.replacements               2276 # total number of replacements
ul2.writebacks                 1071 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0021 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0019 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0009 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses              43065613 # total number of accesses
itlb.hits                  43065569 # total number of hits
itlb.misses                      44 # total number of misses
itlb.replacements                28 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses              16050534 # total number of accesses
dtlb.hits                  16049696 # total number of hits
dtlb.misses                     838 # total number of misses
dtlb.replacements               828 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0001 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0001 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           6795831.7972 # total power usage of rename unit
bpred_power            81314607.2904 # total power usage of bpred unit
window_power           32654383.0662 # total power usage of instruction window
lsq_power              37015420.1212 # total power usage of load/store queue
regfile_power          50278953.2280 # total power usage of arch. regfile
icache_power           37884586.1070 # total power usage of icache
dcache_power           92304771.8943 # total power usage of dcache
dcache2_power          15399824.9130 # total power usage of dcache2
alu_power              226752077.1845 # total power usage of alu
falu_power             137206671.0606 # total power usage of falu
resultbus_power        22797623.7695 # total power usage of resultbus
clock_power            536440881.2790 # total power usage of clock
avg_rename_power             0.1768 # avg power usage of rename unit
avg_bpred_power              2.1159 # avg power usage of bpred unit
avg_window_power             0.8497 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            1.3083 # avg power usage of arch. regfile
avg_icache_power             0.9858 # avg power usage of icache
avg_dcache_power             2.4019 # avg power usage of dcache
avg_dcache2_power            0.4007 # avg power usage of dcache2
avg_alu_power                5.9003 # avg power usage of alu
avg_falu_power               3.5703 # avg power usage of falu
avg_resultbus_power          0.5932 # avg power usage of resultbus
avg_clock_power             13.9588 # avg power usage of clock
fetch_stage_power      119199193.3974 # total power usage of fetch stage
dispatch_stage_power   6795831.7972 # total power usage of dispatch stage
issue_stage_power      426924100.9489 # total power usage of issue stage
avg_fetch_power              3.1017 # average power of fetch unit per cycle
avg_dispatch_power           0.1768 # average power of dispatch unit per cycle
avg_issue_power             11.1090 # average power of issue unit per cycle
total_power            1139638960.6505 # total power per cycle
avg_total_power_cycle       29.6546 # average total power per cycle
avg_total_power_cycle_nofp_nod2      25.6836 # average total power per cycle
avg_total_power_insn        27.8499 # average total power per insn
avg_total_power_insn_nofp_nod2      24.1205 # average total power per insn
rename_power_cc1       4030476.1963 # total power usage of rename unit_cc1
bpred_power_cc1        13635452.6116 # total power usage of bpred unit_cc1
window_power_cc1       27410837.4921 # total power usage of instruction window_cc1
lsq_power_cc1          6076086.6726 # total power usage of lsq_cc1
regfile_power_cc1      29703538.4659 # total power usage of arch. regfile_cc1
icache_power_cc1       23790384.0415 # total power usage of icache_cc1
dcache_power_cc1       29488860.9312 # total power usage of dcache_cc1
dcache2_power_cc1       458637.9718 # total power usage of dcache2_cc1
alu_power_cc1          55349010.6459 # total power usage of alu_cc1
resultbus_power_cc1    14692615.1858 # total power usage of resultbus_cc1
clock_power_cc1        191633853.2209 # total power usage of clock_cc1
avg_rename_power_cc1         0.1049 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.3548 # avg power usage of bpred unit_cc1
avg_window_power_cc1         0.7133 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1581 # avg power usage of lsq_cc1
avg_regfile_power_cc1        0.7729 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         0.6191 # avg power usage of icache_cc1
avg_dcache_power_cc1         0.7673 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0119 # avg power usage of dcache2_cc1
avg_alu_power_cc1            1.4402 # avg power usage of alu_cc1
avg_resultbus_power_cc1       0.3823 # avg power usage of resultbus_cc1
avg_clock_power_cc1          4.9865 # avg power usage of clock_cc1
fetch_stage_power_cc1  37425836.6531 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 4030476.1963 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  133476048.8995 # total power usage of issue stage_cc1
avg_fetch_power_cc1          0.9739 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.1049 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          3.4732 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  396269753.4358 # total power per cycle_cc1
avg_total_power_cycle_cc1      10.3114 # average total power per cycle_cc1
avg_total_power_insn_cc1       9.6838 # average total power per insn_cc1
rename_power_cc2       3618064.3504 # total power usage of rename unit_cc2
bpred_power_cc2        9087577.1784 # total power usage of bpred unit_cc2
window_power_cc2       24566263.9714 # total power usage of instruction window_cc2
lsq_power_cc2          3694856.1443 # total power usage of lsq_cc2
regfile_power_cc2      2609030.9398 # total power usage of arch. regfile_cc2
icache_power_cc2       23790384.0415 # total power usage of icache_cc2
dcache_power_cc2       19272782.2495 # total power usage of dcache_cc2
dcache2_power_cc2       238610.8713 # total power usage of dcache2_cc2
alu_power_cc2          41993246.8444 # total power usage of alu_cc2
resultbus_power_cc2    11519234.1545 # total power usage of resultbus_cc2
clock_power_cc2        132508371.9100 # total power usage of clock_cc2
avg_rename_power_cc2         0.0941 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.2365 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.6392 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0961 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.0679 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         0.6191 # avg power usage of icache_cc2
avg_dcache_power_cc2         0.5015 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0062 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.0927 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.2997 # avg power usage of resultbus_cc2
avg_clock_power_cc2          3.4480 # avg power usage of clock_cc2
fetch_stage_power_cc2  32877961.2199 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 3618064.3504 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  101284994.2353 # total power usage of issue stage_cc2
avg_fetch_power_cc2          0.8555 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.0941 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          2.6355 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  272898422.6553 # total power per cycle_cc2
avg_total_power_cycle_cc2       7.1011 # average total power per cycle_cc2
avg_total_power_insn_cc2       6.6689 # average total power per insn_cc2
rename_power_cc3       3894599.9115 # total power usage of rename unit_cc3
bpred_power_cc3        15896842.8823 # total power usage of bpred unit_cc3
window_power_cc3       25268287.7749 # total power usage of instruction window_cc3
lsq_power_cc3          6743307.9952 # total power usage of lsq_cc3
regfile_power_cc3      4419713.4850 # total power usage of arch. regfile_cc3
icache_power_cc3       25199804.2541 # total power usage of icache_cc3
dcache_power_cc3       25565600.0332 # total power usage of dcache_cc3
dcache2_power_cc3      1732769.0363 # total power usage of dcache2_cc3
alu_power_cc3          59133553.4729 # total power usage of alu_cc3
resultbus_power_cc3    12313350.5256 # total power usage of resultbus_cc3
clock_power_cc3        166928831.5471 # total power usage of clock_cc3
avg_rename_power_cc3         0.1013 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.4137 # avg power usage of bpred unit_cc3
avg_window_power_cc3         0.6575 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.1755 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.1150 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         0.6557 # avg power usage of icache_cc3
avg_dcache_power_cc3         0.6652 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.0451 # avg power usage of dcache2_cc3
avg_alu_power_cc3            1.5387 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.3204 # avg power usage of resultbus_cc3
avg_clock_power_cc3          4.3437 # avg power usage of clock_cc3
fetch_stage_power_cc3  41096647.1363 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 3894599.9115 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  130756868.8380 # total power usage of issue stage_cc3
avg_fetch_power_cc3          1.0694 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1013 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          3.4024 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  347096660.9180 # total power per cycle_cc3
avg_total_power_cycle_cc3       9.0318 # average total power per cycle_cc3
avg_total_power_insn_cc3       8.4822 # average total power per insn_cc3
total_rename_access        40920308 # total number accesses of rename unit
total_bpred_access          8589834 # total number accesses of bpred unit
total_window_access       147129505 # total number accesses of instruction window
total_lsq_access           16053778 # total number accesses of load/store queue
total_regfile_access       52582928 # total number accesses of arch. regfile
total_icache_access        43066199 # total number accesses of icache
total_dcache_access        16048169 # total number accesses of dcache
total_dcache2_access        1190912 # total number accesses of dcache2
total_alu_access           36044684 # total number accesses of alu
total_resultbus_access     39304168 # total number accesses of resultbus
avg_rename_access            1.0648 # avg number accesses of rename unit
avg_bpred_access             0.2235 # avg number accesses of bpred unit
avg_window_access            3.8285 # avg number accesses of instruction window
avg_lsq_access               0.4177 # avg number accesses of lsq
avg_regfile_access           1.3683 # avg number accesses of arch. regfile
avg_icache_access            1.1206 # avg number accesses of icache
avg_dcache_access            0.4176 # avg number accesses of dcache
avg_dcache2_access           0.0310 # avg number accesses of dcache2
avg_alu_access               0.9379 # avg number accesses of alu
avg_resultbus_access         1.0227 # avg number accesses of resultbus
max_rename_access                 2 # max number accesses of rename unit
max_bpred_access                  6 # max number accesses of bpred unit
max_window_access                12 # max number accesses of instruction window
max_lsq_access                    3 # max number accesses of load/store queue
max_regfile_access               10 # max number accesses of arch. regfile
max_icache_access                 2 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                5 # max number accesses of dcache2
max_alu_access                    2 # max number accesses of alu
max_resultbus_access              8 # max number accesses of resultbus
max_cycle_power_cc1         19.9669 # maximum cycle power usage of cc1
max_cycle_power_cc2         15.0061 # maximum cycle power usage of cc2
max_cycle_power_cc3         16.5324 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                  82768 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                   9092 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   37 # total number of pages allocated
mem.page_mem                   148k # total size of memory pages allocated
mem.ptab_misses                  37 # total first level page table misses
mem.ptab_accesses         301743708 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate


Cache Parameters:
  Size in bytes: 4096
  Number of sets: 256
  Associativity: 2
  Block Size (bytes): 8

Access Time: 7.83328e-09
Cycle Time:  9.2734e-09

Best Ndwl (L1): 8
Best Ndbl (L1): 1
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 2

Time Components:
 data side (with Output driver) (ns): 6.3486
 tag side (ns): 7.23475
 decode_data (ns): 3.86948
 wordline_data (ns): 0.846292
 bitline_data (ns): 0.454304
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.23548
 wordline_tag (ns): 1.31674
 bitline_tag (ns): -0.0364655
 sense_amp_tag (ns): 0.26
 compare (ns): 2.49475
 mux driver (ns): 1.6004
 sel inverter (ns): 0.363852
 data output driver (ns): 0.598526
 total data path (with output driver) (ns): 5.75007
 total tag path is set assoc (ns): 7.23475
 precharge time (ns): 1.44012

Cache Parameters:
  Size in bytes: 4096
  Number of sets: 64
  Associativity: 1
  Block Size (bytes): 64

Access Time: 4.77123e-09
Cycle Time:  6.56198e-09

Best Ndwl (L1): 4
Best Ndbl (L1): 1
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 1
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 4.37015
 tag side (ns): 4.77123
 decode_data (ns): 1.72206
 wordline_data (ns): 1.19692
 bitline_data (ns): -0.00613737
 sense_amp_data (ns): 0.58
 decode_tag (ns): 0.974868
 wordline_tag (ns): 0.545337
 bitline_tag (ns): 0.137496
 sense_amp_tag (ns): 0.26
 compare (ns): 2.28193
 valid signal driver (ns): 0.571607
 data output driver (ns): 0.877306
 total data path (with output driver) (ns): 3.49284
 total tag path is dm (ns): 4.77123
 precharge time (ns): 1.79075

Cache Parameters:
  Size in bytes: 4096
  Number of sets: 128
  Associativity: 1
  Block Size (bytes): 32

Access Time: 5.07252e-09
Cycle Time:  6.70931e-09

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 1
Best Ntspd (L1): 2

Time Components:
 data side (with Output driver) (ns): 5.02046
 tag side (ns): 5.07252
 decode_data (ns): 2.63119
 wordline_data (ns): 1.04296
 bitline_data (ns): 0.0437346
 sense_amp_data (ns): 0.58
 decode_tag (ns): 0.974868
 wordline_tag (ns): 0.802533
 bitline_tag (ns): 0.100468
 sense_amp_tag (ns): 0.26
 compare (ns): 2.35287
 valid signal driver (ns): 0.581786
 data output driver (ns): 0.722579
 total data path (with output driver) (ns): 4.29789
 total tag path is dm (ns): 5.07252
 precharge time (ns): 1.63679

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 128
  Associativity: 2
  Block Size (bytes): 64

Access Time: 9.11102e-09
Cycle Time:  1.11419e-08

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 6.05114
 tag side (ns): 7.95857
 decode_data (ns): 2.92572
 wordline_data (ns): 1.437
 bitline_data (ns): -0.0440331
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.46851
 wordline_tag (ns): 0.769907
 bitline_tag (ns): 0.109472
 sense_amp_tag (ns): 0.26
 compare (ns): 2.23669
 mux driver (ns): 2.77454
 sel inverter (ns): 0.339451
 data output driver (ns): 1.15245
 total data path (with output driver) (ns): 4.89869
 total tag path is set assoc (ns): 7.95857
 precharge time (ns): 2.03083
